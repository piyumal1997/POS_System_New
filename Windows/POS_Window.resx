<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="home.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnARkHOwt5y5AKAAACZUlEQVRYR+2XvU4UYRSGN4FCNJoY
        0CvwAqDBRmO0pNIgWnAJXIUBJWq0sTP+kGgjGiqtvQhJNGqBGI1GpbHSCJ/Pe8752FlmB2ayu90+yZvM
        d857fpid/aHVlJTSOLqG3qC/IV0rNh62wcCAK+gHquInuhr2DoiPohuh0QjXg4IJ9AwV2UIvQ7ousoom
        otzgPGMZZybCB4P5IvpuZc4/tIzGwiLP4Ygpl1HNpbDIM2dRZy7C1WA6jp6Yvc07dDosJchNo7cyFniK
        1Kv+Ahh0u76Y1dlGd9GhsFQiD7oTNZmv6L5fGt0XIHEMPTRLm4/obFhqQ80Z9EENulBegOA59MnSzg66
        h46EpTHU6tlQD/UqshAWh4Buud7PmQ10IdI9Q6/z0TOjWf5O4OIkKr6NHqCjluwj6hm9M5p5QonrdnRu
        hX9gMOO2jzKWFFj36/QLHfiU94pmxCyxrkB+7V+FZ+Bolo9Mf3TIrEZ+4DDruY9MabhA7QXIj6GbSB+r
        VSgnz+4XVTfIN1uA3Ah6ba56yDsS5SXINV5g3i3GN/QC6Tu/KMWUy8xHeQlyjRd47BbjVIRLKOcW41GE
        S5BrvID+QiNClYRN7NdvuMBwgY4F8m+3tciXINfvBdbckrZ12PTr9B6FpRPifVuAuKRZYlOHFb82ZsPX
        AfF+LnDZ08aKAlMovwy/kQxhdzj3vABnaRZphtDMyZxctFAb3SK9ThosfUaGFexD2IRqcr165dueWYyS
        3e20RPGfiW7sREkl8ri1Es3QrKgoQHAS6ZnQg7l3GTWu/HzP4NH3xt4l1Es91XsqrNBq/QeKXHLoKK0m
        iAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="removeItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnAhEQOCBlJ91DAAACEUlEQVRYR8WWvS9DURjG20YaCRYW
        FhYSNlZpLQxqZ2fnX2DDyM4oKbNKsGhjxM5MzSoREV7POe9TX7enpz33Nn7Jm/T+znPe8179uFLtICJZ
        1DbqAfWXe9QWKst48vAAH5uMJw+am7s0TFN9AZfTJbmnSh4eILyMwGXnuhfsHUGdo15No4QxPc9Qwzwu
        ChbN4Z3mlMdFwWL9zvupEgM9B7S1vFJFYSD8PfTA9u7+XP//AToNj4uCtYpGOkqZxzUGgTXNyQ5VbNBr
        V1vKKpUbhFY0K3tUsUGvfW0py1RuEFrSrBSpLLi+RFV4aWnDHaIMi1RuEFrQrBxTWeh+fYCoWnEltVKg
        coPQjGblgspCFzpAWa3kqdwgNKVZuaay0IUOcKNWJqncIDSmWbmlstCFDnCnVkap3CA0pFl5oLLQhQ5Q
        VSuDVG4Q6tOsPFFZ6EIHqKmVXio3CGVQH6h3VJo6eAC8TKNML9MzQ90cBJ9Rhh6qOAP0qpEalR+EH3XP
        93vG65AB6p+pKpUfhCOfWl6HDNDwW9UUhCPfW16HDNDwd6UpCNcfyzmqOAPk1Xgewz9B+ET3yDxVnAEK
        aqRE5QfhI93z/fTCa/NX+XUXrTi8rj9dD6n8INz689sDerT//wXCG7pHDlBd1G2Dvd2oomkE1qn9IDyB
        erHbksH0Gmf71sCGOdQV6g0Vitlresyy7R9SqU/sufc6U/RbNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>